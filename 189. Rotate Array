class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        vector<int> newNums(n);
        for(int i=0; i<n; i++)
        {
            newNums[(i+k)%n] = nums[i];
        }
        nums.assign(newNums.begin(), newNums.end());
    }
};





class Solution {
public:
    void reverse(vector<int>& nums, int start, int end)
    {
        while(start < end)
        {
            swap(nums[start], nums[end]);
            start++;
            end--;
        }
    }

    void rotate(vector<int>& nums, int k) {
        k %= nums.size();
        reverse(nums, 0, nums.size()-1);
        reverse(nums, 0, k-1);
        reverse(nums, k, nums.size()-1);
    }
};
